@using global::App.Data
@inherits LayoutComponentBase

<FluentLayout Style="overflow: hidden">
    <FluentHeader Style="background-color: var(--neutral-layer-2);display: flex; align-items: center;">
        <div style="color: var(--neutral-foreground-rest); padding-top: 0.8rem">
            gcalc
        </div>
        <FluentSelect TOption="Workspace"
                      Items="@m_Workspaces"
                      Id="workspaces-listbox"
                      Width="250px"
                      Height="200px"
                      Placeholder="Select a workspace..."
                      OptionValue="@(p => p.Name.ToString())"
                      OptionText="@(p => p.Name)"
                      @bind-Value="@m_CurrentWorkspaceName"
                      @bind-SelectedOption="@m_CurrentWorkspace"
                      Style="margin: 0.5rem 1rem; height: 32px"/>
        <FluentButton Appearance="Appearance.Stealth" OnClick="@CreateNewWorkspaceAsync"
                      Title="Create new Workspace" aria-label="Settings"
                      Style="aspect-ratio: 1/1; height: 32px; margin-right: 0.5rem">
            <FluentIcon Value="@(new Icons.Regular.Size24.FormNew())" Color="Color.Neutral"/>
        </FluentButton>
        <FluentButton Appearance="Appearance.Stealth" OnClick="@ImportWorkspaceAsync"
                      Title="Import Workspace" aria-label="Settings" Style="aspect-ratio: 1/1; height: 32px">
            <FluentIcon Value="@(new Icons.Regular.Size24.DocumentArrowDown())" Color="Color.Neutral"/>
        </FluentButton>
        <FluentSpacer/>
        <FluentButton Appearance="Appearance.Stealth" OnClick="@LaunchSettingsAsync"
                      Title="Settings" aria-label="Settings" Style="aspect-ratio: 1/1; height: 32px">
            <FluentIcon Value="@(new Icons.Regular.Size24.Settings())" Color="Color.Neutral"/>
        </FluentButton>
    </FluentHeader>

    <FluentStack Orientation="Orientation.Horizontal" Width="100%">
        <FluentAppBar Orientation="@(m_Vertical ? Orientation.Vertical : Orientation.Horizontal)"
                      Style="@(" background-color: var(--neutral-layer-2);")" PopoverVisibilityChanged="HandlePopover"
                      PopoverShowSearch="@m_ShowSearch">

            <FluentAppBarItem Href="/"
                              Match="NavLinkMatch.All"
                              IconRest="@(new Icons.Regular.Size24.Home())"
                              IconActive="@(new Icons.Filled.Size24.Home())"
                              Text="Overview"/>
            <FluentAppBarItem Href="/calc"
                              Match="NavLinkMatch.All"
                              IconRest="@(new Icons.Regular.Size24.Calculator())"
                              IconActive="@(new Icons.Filled.Size24.Calculator())"
                              Text="Calculator"/>
            <FluentAppBarItem Href="/graph"
                              Match="NavLinkMatch.All"
                              IconRest="@(new Icons.Regular.Size24.ChartMultiple())"
                              IconActive="@(new Icons.Filled.Size24.ChartMultiple())"
                              Text="Graph"/>
            <FluentAppBarItem Href="/chat"
                              Match="NavLinkMatch.All"
                              IconRest="@(new Icons.Regular.Size24.Chat())"
                              IconActive="@(new Icons.Filled.Size24.Chat())"
                              Text="Chat"/>
        </FluentAppBar>


        <FluentBodyContent Style="overflow: scroll; padding: 0.8rem 0 48px;">
            @Body
        </FluentBodyContent>
    </FluentStack>
</FluentLayout>


<FluentToastProvider/>
<FluentDialogProvider/>
<FluentTooltipProvider/>
<FluentMessageBarProvider/>
<FluentMenuProvider/>
<FluentDesignTheme Mode="DesignThemeModes.Dark" OfficeColor="OfficeColor.Windows"/>

@code {
    private bool m_Vertical = true;
    private bool m_ShowSearch = true;

    private List<Workspace> m_Workspaces =
    [
        new Workspace() { Name = "Test 1" },
        new Workspace() { Name = "Test 2" },
        new Workspace() { Name = "Test 3" },
        new Workspace() { Name = "Test 4" },
        new Workspace() { Name = "Test 5" },
        new Workspace() { Name = "Test 6" },
        new Workspace() { Name = "Test 7" },
        new Workspace() { Name = "Test 8" },
        new Workspace() { Name = "Test 9" },
        new Workspace() { Name = "Test 10" }
    ];

    private Workspace? m_CurrentWorkspace;
    private string? m_CurrentWorkspaceName;

    private void HandlePopover(bool visible)
    {
    }

    private Task LaunchSettingsAsync()
    {
        throw new NotImplementedException();
    }

    private Task CreateNewWorkspaceAsync()
    {
        throw new NotImplementedException();
    }

    private Task ImportWorkspaceAsync()
    {
        throw new NotImplementedException();
    }

}